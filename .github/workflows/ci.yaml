name: Publish Docker image

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set Docker image tags
        id: docker_tags
        run: |
          # Initialize tags array
          TAGS=()

          # Set image name
          IMAGE_NAME="jdsalchow/jvm-latex"

          # Tag as release version if it's a release event
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
            # Remove 'v' prefix if present
            VERSION="${VERSION#v}"
            TAGS+=("${IMAGE_NAME}:${VERSION}")

            # Also add the tag reference
            if [[ -n "${{ github.ref_name }}" ]]; then
              TAGS+=("${IMAGE_NAME}:${{ github.ref_name }}")
            fi
          fi

          # Tag as 'main' and 'main-<shortsha>' if pushing to main
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS+=("${IMAGE_NAME}:main")
            TAGS+=("${IMAGE_NAME}:main-${GITHUB_SHA::7}")
          fi

          # Join tags with comma for output
          echo "tags=$(IFS=,; echo "${TAGS[*]}")" >> $GITHUB_OUTPUT

          # Print tags for debugging
          echo "Generated tags: ${TAGS[*]}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_tags.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
